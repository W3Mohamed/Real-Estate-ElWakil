security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username

        in_memory:
            memory:
                users:
                    admin:
                        password: '%env(ADMIN_PASSWORD)%'
                        roles: 'ROLE_ADMIN'
    firewalls:
    
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        admin:
            pattern: ^/admin # Protège toutes les routes commençant par /admin
            http_basic: ~  # <-- Ceci est ESSENTIEL pour la popup de connexion
            provider: in_memory  # Utilise le provider "in_memory"
            logout:
                path: /admin/logout  # Route pour la déconnexion
                target: /

        main:
            pattern: ^/(agence|login|logout)
            form_login:
                login_path: app_login
                check_path: app_login
                default_target_path: agence
                enable_csrf: true
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route
            provider: app_user_provider


            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/agence, roles: ROLE_AGENCE } 

when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                    algorithm: auto
                    cost: 4
                    time_cost: 3
                    memory_cost: 10